// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Css = require("bs-css/src/Css.js");
var React = require("react");
var ReasonReact = require("reason-react/src/ReasonReact.js");

function str(prim) {
  return prim;
}

var component = ReasonReact.statelessComponent("NewsletterSignup");

var label = Css.style(/* :: */[
      Css.color(Css.hex("7e8a9a")),
      /* [] */0
    ]);

var input = Css.style(/* :: */[
      Css.border(Css.px(1), /* solid */12956715, Css.hex("ced3d9")),
      /* :: */[
        Css.borderRadius(Css.px(4)),
        /* :: */[
          Css.boxSizing(/* borderBox */9307263),
          /* :: */[
            Css.padding2(Css.em(0.75), Css.em(1.0)),
            /* :: */[
              Css.width(Css.pct(100)),
              /* [] */0
            ]
          ]
        ]
      ]
    ]);

var form = Css.style(/* :: */[
      Css.backgroundColor(Css.hex("#fff")),
      /* [] */0
    ]);

var button = Css.style(/* :: */[
      Css.backgroundColor(Css.hex("db4d3f")),
      /* :: */[
        Css.borderRadius(Css.px(4)),
        /* :: */[
          Css.border(Css.px(0), /* none */-922086728, Css.hex("ced3d9")),
          /* :: */[
            Css.color(Css.white),
            /* :: */[
              Css.margin2(Css.px(16), /* auto */-1065951377),
              /* :: */[
                Css.padding2(Css.em(0.75), Css.em(1.0)),
                /* :: */[
                  Css.width(Css.pct(100)),
                  /* [] */0
                ]
              ]
            ]
          ]
        ]
      ]
    ]);

var Styles = /* module */[
  /* label */label,
  /* input */input,
  /* form */form,
  /* button */button
];

function make(_children) {
  return /* record */[
          /* debugName */component[/* debugName */0],
          /* reactClassInternal */component[/* reactClassInternal */1],
          /* handedOffState */component[/* handedOffState */2],
          /* willReceiveProps */component[/* willReceiveProps */3],
          /* didMount */component[/* didMount */4],
          /* didUpdate */component[/* didUpdate */5],
          /* willUnmount */component[/* willUnmount */6],
          /* willUpdate */component[/* willUpdate */7],
          /* shouldUpdate */component[/* shouldUpdate */8],
          /* render */(function (_self) {
              return React.createElement("form", {
                          className: form,
                          action: "https://buttondown.email/api/emails/embed-subscribe/iwilsonq",
                          method: "post",
                          onSubmit: (function (_event) {
                              return /* () */0;
                            })
                        }, React.createElement("h2", undefined, "Ian's Spirits and Such Dev Newsletter"), React.createElement("p", undefined, "If you want to stay in the loop with respect to what I'm currently building or learning about, sign up for my newsletter. Emails go out roughly once every 1 - 2 weeks."), React.createElement("label", {
                              className: label,
                              htmlFor: "bd-email"
                            }, "Email", React.createElement("br", undefined), React.createElement("input", {
                                  className: input,
                                  id: "bd-email",
                                  name: "email",
                                  type: "email"
                                })), React.createElement("br", undefined), React.createElement("input", {
                              name: "embed",
                              type: "hidden",
                              value: "1"
                            }), React.createElement("input", {
                              className: button,
                              type: "submit",
                              value: "Subscribe"
                            }), React.createElement("p", undefined, React.createElement("i", undefined, "I promise not to send you spam, only stimulating tech articles :) ")));
            }),
          /* initialState */component[/* initialState */10],
          /* retainedProps */component[/* retainedProps */11],
          /* reducer */component[/* reducer */12],
          /* jsElementWrapped */component[/* jsElementWrapped */13]
        ];
}

var $$default = ReasonReact.wrapReasonForJs(component, (function (_jsProps) {
        return make(/* array */[]);
      }));

exports.str = str;
exports.component = component;
exports.Styles = Styles;
exports.make = make;
exports.$$default = $$default;
exports.default = $$default;
exports.__esModule = true;
/* component Not a pure module */
